{"version":3,"file":"soucouyant.js","sources":["../src/collection.js","../src/state-object.js"],"sourcesContent":["// const typeCheck = ({}).toString.call(type);\n\nconst checkType = type => {\n    switch (type) {\n        case Array:\n            return [];\n        case Object:\n            return '';\n        default:\n            return type;\n            // if (Array.isArray()) {\n            //     return type;\n            // }\n    }\n}\n\nexport default (type, model, hasEntries) => {\n    // Get the corresponding dataset according to the type.\n    const dataSet = checkType(type);\n    const isArray = Array.isArray(dataset);\n    const isObject = isArray ? false : ((dataset) + '').indexOf('Object') >= 0;\n\n    // Check if the array has entries.\n    const data = isArray && hasEntries ? type : type.map((item, i) => [i, item]);\n\n    const properties = {\n        data,\n        get entries() {\n            return this.data;\n        },\n    }\n    return properties;\n}","export default () =>{\n\t\n}"],"names":["type","model","hasEntries","isArray","Array","dataset","isObject","indexOf","data","map","item","i","properties","entries"],"mappings":"AAAA;;AAgBA,kBAAe,CAACA,IAAD,EAAOC,KAAP,EAAcC,UAAd,KAA6B;AACxC,AAEA,UAAMC,UAAUC,MAAMD,OAAN,CAAcE,OAAd,CAAhB;UACMC,WAAWH,UAAU,KAAV,GAAkB,CAAEE,OAAD,GAAY,EAAb,EAAiBE,OAAjB,CAAyB,QAAzB,KAAsC,CAAzE;;;UAGMC,OAAOL,WAAWD,UAAX,GAAwBF,IAAxB,GAA+BA,KAAKS,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,KAAa,CAACA,CAAD,EAAID,IAAJ,CAAtB,CAA5C;;UAEME,aAAa;YAAA;YAEXC,OAAJ,GAAc;mBACH,KAAKL,IAAZ;;KAHR;WAMOI,UAAP;CAfJ;;AChBA,mBAAe,MAAK,EAApB;;;;"}